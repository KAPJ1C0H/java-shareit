services:
  gateway:
    build: gateway
    image: shareit-gateway
    container_name: shareit-gateway
    ports:
      - "8080:8080"
    depends_on:
      - server
    environment:
      - SHAREIT_SERVER_URL=http://server:9090

  server:
    build: server
    image: shareit-server
    container_name: shareit-server
    ports:
      - "9090:9090"
    depends_on:
      - db
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/shareit
      - SPRING_DATASOURCE_USERNAME=shareit
      - SPRING_DATASOURCE_PASSWORD=shareit

  db:
    image: postgres:16.1
    container_name: postgres
    ports:
      - "6541:5432"
    environment:
      - POSTGRES_PASSWORD=shareit
      - POSTGRES_USER=shareit
      - POSTGRES_DB=shareit
    healthcheck:  # Проверка работоспособности базы данных
      test: pg_isready -q -d $$POSTGRES_DB -U $$POSTGRES_USER # Команда для проверки
      timeout: 5s   # Максимальное время ожидания ответа
      interval: 5s  # Частота проверок
      retries: 10   # Количество попыток перед признанием базы данных неработоспособной
    volumes:
      - db_data:/var/lib/postgresql/data  # Сохранение данных базы данных между перезапусками контейнера
    restart: always  # Автоматический перезапуск контейнера при сбое

  db-init:
    image: postgres:16.1
    container_name: db-init
    depends_on:
      db:
        condition: service_healthy
    environment:
      - POSTGRES_PASSWORD=shareit
      - POSTGRES_USER=shareit
      - POSTGRES_DB=shareit
    entrypoint:
      - bash
      - -c
      - |
        set -e
        
        until pg_isready -q -d "$$POSTGRES_DB" -U "$$POSTGRES_USER" -h db; do
          echo "Ожидание готовности базы данных...";
          sleep 2;
        done;
        
        # Используем переменные окружения в URL подключения!
        psql "postgresql://$$POSTGRES_USER:$$POSTGRES_PASSWORD@db:5432/$$POSTGRES_DB" -v ON_ERROR_STOP=1 <<-EOSQL
          CREATE TABLE IF NOT EXISTS users (
            id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
            name VARCHAR(255) NOT NULL,
            login VARCHAR(100),
            email VARCHAR(512) NOT NULL,
            CONSTRAINT UQ_USER_EMAIL UNIQUE (email)
          );
          CREATE TABLE If NOT EXISTS requests (
            id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
            description VARCHAR(250),
            requester_id BIGINT REFERENCES users(id),
            create_date TIMESTAMP WITHOUT TIME ZONE NOT NULL
          );
          CREATE TABLE IF NOT EXISTS items (
            id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
            owner_id BIGINT NOT NULL REFERENCES users(id),
            been_on_loan INTEGER,
            name VARCHAR(100) NOT NULL,
            description VARCHAR(300) NOT NULL,
            available BOOLEAN,
            request_id BIGINT REFERENCES requests(id)
          );
          CREATE TABLE IF NOT EXISTS booking (
            id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
            booker BIGINT NOT NULL REFERENCES users(id),
            item BIGINT NOT NULL REFERENCES items(id),
            start_time TIMESTAMP NOT NULL,
            end_time TIMESTAMP NOT NULL,
            status VARCHAR(100) NOT NULL
          );
          CREATE TABLE IF NOT EXISTS comments (
            id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
            user_id BIGINT NOT NULL REFERENCES users(id),
            item_id BIGINT NOT NULL REFERENCES items(id),
            text VARCHAR(500) NOT NULL,
            create_date_time TIMESTAMP NOT NULL
          );
        EOSQL
volumes:
  db_data: